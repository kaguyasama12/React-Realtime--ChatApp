{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Documents\\\\Learn React\\\\chatApp\\\\reactSocketClient\\\\src\\\\index.js\";\nimport ReactDOM from 'react-dom';\nimport React, { Component } from 'react';\nimport { w3cwebsocket as W3CWebSocket } from 'websocket';\nimport { Card, Avatar, Input, Typography } from 'antd';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport App from './App.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Search\n} = Input;\nconst {\n  Text\n} = Typography;\nconst {\n  Meta\n} = Card;\nconst client = new W3CWebSocket('ws://127.0.0.1:8000'); // export default class App extends Component {\n//     state = {\n//         userName: '',\n//         isLoggedIn: false,\n//         messages: []\n//     }\n//     onButtonClicked = (value) => {\n//         client.send(JSON.stringify({\n//             type: \"message\",\n//             msg: value,\n//             user: this.state.userName\n//         }));\n//         this.setState({ searchVal: ''})\n//     }\n//     componentDidMount() {\n//         client.onopen = () => {\n//             console.log('WebSocket Client Connected');\n//         };\n//         client.onmessage = (message) => {\n//             const dataFromServer = JSON.parse(message.data);\n//             console.log('got reply!', dataFromServer);\n//             if (dataFromServer.type === \"message\") {\n//                 this.setState((state) => ({\n//                     messages: [ ... state.messages,\n//                         {\n//                             msg: dataFromServer.msg,\n//                             user: dataFromServer.user\n//                         }]\n//                 }));\n//             }\n//         };\n//     }\n//     render() {\n//         return (\n//             <div className=\"main\">\n//                 { this.state.isLoggedIn ?\n//                 <div>\n//                     {/* <button onClick={() => this.onButtonClicked(\"Hello!\")}>Create</button>\n//                     <button onClick={() => this.onButtonClicked(\"Hello!\")}>Join</button>\n//                     { this.state.messages.map(msg => <p>message: {msg.msg}, user: {msg.user}</p>)} */}\n//                     <div className=\"title\">\n//                         <Text type=\"secondary\" style={{ fontSize: '36px' }}>Websocket</Text>\n//                     </div>\n//                     <div style={{ display: 'flex', flexDirection: 'column', paddingBottom: 50 }} id=\"messages\">\n//                         {this.state.messages.map(message => \n//                         <Card key={message.msg} style={{ width: 300, margin: '16px 4px 0 4px', alignSelf: this.state.userName === message.user ? 'flex-end' : 'flex-start' }} loading={false}>\n//                             <Meta\n//                             avatar={\n//                                 <Avatar style={{ color: '#f56a00', backgroundColor: '#fde3cf' }}>{message.user[0].toUpperCase()}</Avatar>\n//                             }\n//                             title={message.user+\":\"}\n//                             description={message.msg}\n//                             />\n//                         </Card> \n//                         )}\n//                     </div>\n//                     <div className=\"bottom\">\n//                         <Search\n//                         placeholder=\"input message and send\"\n//                         enterButton=\"Send\"\n//                         value={this.state.searchVal}\n//                         size=\"large\"\n//                         onChange={(e) => this.setState({ searchVal: e.target.value })}\n//                         onSearch={value => this.onButtonClicked(value)}\n//                         />\n//                     </div>\n//                 </div>\n//                 : \n//                 <div style={{ padding: '200px 40px '}}>\n//                     <Search\n//                         placeholder=\"Enter Username\"\n//                         enterButton=\"Login\"\n//                         size=\"large\"\n//                         onSearch={ value => this.setState({ isLoggedIn: true, userName: value})}\n//                     />\n//                 </div>\n//                 }\n//             </div>\n//         )\n//     }\n// }\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 117,\n  columnNumber: 17\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/LENOVO/Documents/Learn React/chatApp/reactSocketClient/src/index.js"],"names":["ReactDOM","React","Component","w3cwebsocket","W3CWebSocket","Card","Avatar","Input","Typography","App","Search","Text","Meta","client","render","document","getElementById"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,YAAY,IAAIC,YAAzB,QAA6C,WAA7C;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,UAA9B,QAA+C,MAA/C;AACA,OAAO,oBAAP;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,UAAhB;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaH,KAAnB;AACA,MAAM;AAAEI,EAAAA;AAAF,IAAWH,UAAjB;AACA,MAAM;AAAEI,EAAAA;AAAF,IAAWP,IAAjB;AAEA,MAAMQ,MAAM,GAAG,IAAIT,YAAJ,CAAiB,qBAAjB,CAAf,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AACA;AACA;;AAEAJ,QAAQ,CAACc,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import ReactDOM from 'react-dom';\r\nimport React, { Component } from 'react';\r\nimport { w3cwebsocket as W3CWebSocket } from 'websocket';\r\nimport { Card, Avatar, Input, Typography} from 'antd';\r\nimport 'antd/dist/antd.css'\r\nimport './index.css';\r\nimport App from './App.js';\r\n\r\nconst { Search } = Input;\r\nconst { Text } = Typography;\r\nconst { Meta } = Card;\r\n\r\nconst client = new W3CWebSocket('ws://127.0.0.1:8000');\r\n\r\n// export default class App extends Component {\r\n\r\n//     state = {\r\n//         userName: '',\r\n//         isLoggedIn: false,\r\n//         messages: []\r\n//     }\r\n\r\n\r\n//     onButtonClicked = (value) => {\r\n//         client.send(JSON.stringify({\r\n//             type: \"message\",\r\n//             msg: value,\r\n//             user: this.state.userName\r\n//         }));\r\n//         this.setState({ searchVal: ''})\r\n//     }\r\n\r\n//     componentDidMount() {\r\n//         client.onopen = () => {\r\n//             console.log('WebSocket Client Connected');\r\n//         };\r\n\r\n//         client.onmessage = (message) => {\r\n//             const dataFromServer = JSON.parse(message.data);\r\n//             console.log('got reply!', dataFromServer);\r\n//             if (dataFromServer.type === \"message\") {\r\n//                 this.setState((state) => ({\r\n//                     messages: [ ... state.messages,\r\n//                         {\r\n//                             msg: dataFromServer.msg,\r\n//                             user: dataFromServer.user\r\n//                         }]\r\n//                 }));\r\n//             }\r\n//         };\r\n//     }\r\n\r\n\r\n\r\n//     render() {\r\n//         return (\r\n//             <div className=\"main\">\r\n//                 { this.state.isLoggedIn ?\r\n//                 <div>\r\n//                     {/* <button onClick={() => this.onButtonClicked(\"Hello!\")}>Create</button>\r\n//                     <button onClick={() => this.onButtonClicked(\"Hello!\")}>Join</button>\r\n//                     { this.state.messages.map(msg => <p>message: {msg.msg}, user: {msg.user}</p>)} */}\r\n//                     <div className=\"title\">\r\n//                         <Text type=\"secondary\" style={{ fontSize: '36px' }}>Websocket</Text>\r\n//                     </div>\r\n\r\n//                     <div style={{ display: 'flex', flexDirection: 'column', paddingBottom: 50 }} id=\"messages\">\r\n//                         {this.state.messages.map(message => \r\n//                         <Card key={message.msg} style={{ width: 300, margin: '16px 4px 0 4px', alignSelf: this.state.userName === message.user ? 'flex-end' : 'flex-start' }} loading={false}>\r\n//                             <Meta\r\n//                             avatar={\r\n//                                 <Avatar style={{ color: '#f56a00', backgroundColor: '#fde3cf' }}>{message.user[0].toUpperCase()}</Avatar>\r\n//                             }\r\n//                             title={message.user+\":\"}\r\n//                             description={message.msg}\r\n//                             />\r\n//                         </Card> \r\n//                         )}\r\n//                     </div>\r\n\r\n//                     <div className=\"bottom\">\r\n//                         <Search\r\n//                         placeholder=\"input message and send\"\r\n//                         enterButton=\"Send\"\r\n//                         value={this.state.searchVal}\r\n//                         size=\"large\"\r\n//                         onChange={(e) => this.setState({ searchVal: e.target.value })}\r\n//                         onSearch={value => this.onButtonClicked(value)}\r\n//                         />\r\n//                     </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n//                 </div>\r\n//                 : \r\n//                 <div style={{ padding: '200px 40px '}}>\r\n//                     <Search\r\n//                         placeholder=\"Enter Username\"\r\n//                         enterButton=\"Login\"\r\n//                         size=\"large\"\r\n//                         onSearch={ value => this.setState({ isLoggedIn: true, userName: value})}\r\n//                     />\r\n//                 </div>\r\n                \r\n                \r\n//                 }\r\n                \r\n\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}